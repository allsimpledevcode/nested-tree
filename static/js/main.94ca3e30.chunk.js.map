{"version":3,"sources":["theme/globalStyles.js","components/checkbox-with-dragger/CheckBoxWithDraggerComponent.jsx","components/check-box-group/CheckBoxGroupComponent.jsx","container-components/column-customize/ColumnCustomizeContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Actions","styled","div","CheckBoxWrapper","props","label","CheckboxContainer","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","checked","show","DraggerIndicator","GrApps","getCommonActionCSS","EditActionButton","BiPencil","DeleteActionButton","BiTrash","InlineEditTextBox","error","CheckBoxWithDraggerComponent","isChecked","groupIndicator","onRemove","onEdit","dragger","showGroupToggleIcon","useState","inlineEdit","setInlineEdit","textValue","setTextValue","setError","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","viewBox","points","ref","data-testid","value","onChange","e","onKeyDown","onMouseDown","key","trim","length","onClick","defaultProps","CheckBoxGroupContainer","CheckBoxGroupParent","ArrowIcon","IoIosArrowDown","collapse","CheckBoxTreeList","ul","CheckBoxTreeListItem","li","CheckBoxGroupComponent","memo","node","onSelectItem","handleActions","removeItem","children","index","setCollapse","selectedItemCount","filter","n","allSelected","every","toString","id","parentIndex","map","child","i","childIndex","SearchContainer","ColumnList","SearchBox","array","reduce","r","o","toLowerCase","indexOf","push","Object","assign","ColumnCustomizeContainer","treeJson","term","searchTem","treeList","setTreeList","isOpen","setIsOpen","isAllSelected","lists","treeArray","res","arr","forEach","a","parentId","listToTree","params","clonedTree","parentObject","hasOwnProperty","selectedAllField","removeFromOriginalJson","ids","elementIndex","findIndex","tree","splice","ch","SortableItem","SortableElement","t","DragHandle","className","SortableList","SortableContainer","sortableHandle","clonedList","placeholder","onSortEnd","oldIndex","newIndex","arrayMove","distance","useDragHandle","SideBar","aside","Menu","MenuList","MenuListItem","active","Content","ResetButton","button","mockJson","resetStorage","localStorage","setItem","JSON","stringify","window","location","reload","App","getItem","showNestedMenu","setNestedMenu","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94ca3e30.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n \nconst GlobalStyle = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n    font-size: 14px;\n    letter-spacing: 0.5px;\n  }\n`;\n \nexport default GlobalStyle;","import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { GrApps } from 'react-icons/gr';\nimport { BiTrash, BiPencil } from 'react-icons/bi';\n\nconst propTypes = {\n\t// handle for the checkbox selection\n\tonChange: PropTypes.func.isRequired,\n\t// Label for the checkbox element\n\tlabel: PropTypes.string,\n\t// Pass check box check/uncheck property\n\tisChecked: PropTypes.bool,\n\t// To change the checkbox icon based on the value\n\tgroupIndicator: PropTypes.bool,\n\t// Handle for remove action\n\tonRemove: PropTypes.func,\n\t// Handle for edit action\n\tonEdit: PropTypes.func,\n\t// Dynamic sorting dragger option\n\tdragger: PropTypes.func\n};\n\nconst defaultProps = {\n\tisChecked: false,\n\tonChange: () => {},\n\tgroupIndicator: false\n};\n\nconst Actions = styled.div`\n\tposition: absolute;\n\tright: 0px;\n\ttop: 1px;\n\twidth: 53px;\n\tleft: auto;\n\tdisplay: none;\n\tbackground-color: #f3f3f3;\n\tbox-shadow: -23px -1px 7px -1px #f7f0f0;\n`;\n\nconst CheckBoxWrapper = styled.div`\n\tposition: relative;\n\twidth: ${props => (props.label ? '100%' : 'auto')};\n\n\t&:hover ${Actions} {\n\t\tdisplay: block;\n\t}\n`;\n\nconst CheckboxContainer = styled.label`\n\tdisplay: flex;\n\talign-items: center;\n\ttext-align: left;\n`;\n\nconst Icon = styled.svg`\n\tfill: none;\n\tstroke: white;\n\tstroke-width: 2px;\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n\tdisplay: inherit;\n\twidth: 16px;\n\theight: 16px;\n\t${props => {\n\t\tif (props.checked) {\n\t\t\treturn `\n\t\t\t\tbackground-color: #2295f3;\n\t\t\t`;\n\t\t} else if (props.show) {\n\t\t\treturn `\n\t\t\t\tbackground-color: #5f6365;\n\t\t\t`;\n\t\t} else {\n\t\t\treturn `\n\t\t\t\tbackground-color: transparent;\n\t\t\t`;\n\t\t}\n\t}} border: 1px solid ${props => (props.checked ? '#2295f3' : '#5f6365')};\n\tborder-radius: 3px;\n\ttransition: all 150ms;\n\n\t${HiddenCheckbox}:focus + & {\n\t\tbox-shadow: 0 0 0 1px #2295f3;\n\t}\n\n\t${Icon} {\n\t\tvisibility: ${props => (props.checked || props.show ? 'visible' : 'hidden')};\n\t}\n`;\n\nconst DraggerIndicator = styled(GrApps)`\n    margin: 0 10px;\n\twidth: 18px;\n\tcursor: no-drop;\n`;\n\nconst getCommonActionCSS = `\n\tcursor: pointer;\n    width: 16px;\n    height: 16px;\n    padding: 1px;\n    display: inline-block;\n`;\n\nconst EditActionButton = styled(BiPencil)`\n\t${getCommonActionCSS}\n\tmargin: 0 10px;\n\tfill: #333;\n`;\n\nconst DeleteActionButton = styled(BiTrash)`\n\t${getCommonActionCSS}\n\tfill: red;\n`;\n\nconst InlineEditTextBox = styled.input.attrs({ type: 'text' })`\n\twidth: 100%;\n\tpadding: 3px;\n\tborder-radius: 4px;\n\tborder: 1px solid ${props => (props.error ? '#f44336' : '#ddd')};\n\toutline: 0\n`;\n/**\n *  Checkbox with dragger component\n */\nconst CheckBoxWithDraggerComponent = ({ isChecked, label, groupIndicator, onRemove, onEdit, dragger, ...props }) => {\n\tconst showGroupToggleIcon = groupIndicator && isChecked !== true;\n\tconst [ inlineEdit, setInlineEdit ] = useState(false);\n\tconst [ textValue, setTextValue ] = useState(label);\n\tconst [ error, setError ] = useState(false);\n\tconst wrapperRef = useRef(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tfunction handleClickOutside(event) {\n\t\t\t\tif (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n\t\t\t\t\tsetInlineEdit(false);\n\t\t\t\t\tonEdit(textValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Bind the event listener\n\t\t\tdocument.addEventListener('mousedown', handleClickOutside);\n\t\t\treturn () => {\n\t\t\t\t// Unbind the event listener on clean up\n\t\t\t\tdocument.removeEventListener('mousedown', handleClickOutside);\n\t\t\t};\n\t\t},\n\t\t[ wrapperRef, textValue, onEdit ]\n\t);\n\n\tconst handleEnter = (e = {}, onMouseDown = false) => {\n\t\tif (e.key === 'Enter' || onMouseDown) {\n\t\t\tsetError(false);\n\t\t\tif (textValue.trim().length <= 0) {\n\t\t\t\tsetError(true);\n\t\t\t} else {\n\t\t\t\tsetInlineEdit(false);\n\t\t\t\tonEdit(textValue);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<CheckBoxWrapper label={label}>\n\t\t\t<CheckboxContainer>\n\t\t\t\t<HiddenCheckbox checked={isChecked} {...props} />\n\t\t\t\t<StyledCheckbox checked={isChecked} show={showGroupToggleIcon}>\n\t\t\t\t\t<Icon viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t{showGroupToggleIcon ? <polyline points=\"5 12 20 12\" /> : <polyline points=\"20 6 9 17 4 12\" />}\n\t\t\t\t\t</Icon>\n\t\t\t\t</StyledCheckbox>\n\t\t\t\t{label && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{/* This option for add dragger from the sortable element */}\n\t\t\t\t\t\t{dragger ? dragger : <DraggerIndicator />}\n\t\t\t\t\t\t{inlineEdit ? (\n\t\t\t\t\t\t\t<InlineEditTextBox\n\t\t\t\t\t\t\t\tref={wrapperRef}\n\t\t\t\t\t\t\t\tdata-testid=\"inline-edit-textbox\"\n\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\tvalue={textValue}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetTextValue(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonKeyDown={handleEnter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>{label}</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</CheckboxContainer>\n\t\t\t{label &&\n\t\t\t!inlineEdit && (\n\t\t\t\t<Actions>\n\t\t\t\t\t<EditActionButton onClick={() => setInlineEdit(!inlineEdit)} data-testid=\"edit-action\" />\n\t\t\t\t\t<DeleteActionButton onClick={onRemove} data-testid=\"remove-action\" />\n\t\t\t\t</Actions>\n\t\t\t)}\n\t\t</CheckBoxWrapper>\n\t);\n};\n\nCheckBoxWithDraggerComponent.propTypes = propTypes;\n\nCheckBoxWithDraggerComponent.defaultProps = defaultProps;\n\nexport default CheckBoxWithDraggerComponent;","import React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CheckBox from '../checkbox-with-dragger/CheckBoxWithDraggerComponent';\nimport { IoIosArrowDown } from 'react-icons/io';\n\nconst propTypes = {\n\t// parent element with children\n\tnode: PropTypes.object,\n\t// handle for every checkbox selection\n\tonSelectItem: PropTypes.func,\n\t// handle for every item name edit using inline textbox\n\thandleActions: PropTypes.func,\n\t// handle for remove item from the group\n\tremoveItem: PropTypes.func,\n\t// sortable dragger handle element\n\tchildren: PropTypes.element,\n\t// Parent element index value\n\tindex: PropTypes.number\n};\n\nconst CheckBoxGroupContainer = styled.div`\n\tmargin-bottom: 16px;\n\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n`;\n\nconst CheckBoxGroupParent = styled.div`\n\tmargin-bottom: 6px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst ArrowIcon = styled(IoIosArrowDown)(\n\t({ collapse }) => `\n    margin-right: 12px;\n    width: 18px;\n    height: 18px;\n    cursor: pointer;\n    position: relative;\n    transform: rotate(${collapse === 'true' ? '-90' : '0'}deg);\n    top: -1px;\n`\n);\n\nconst CheckBoxTreeList = styled.ul(\n\t({ collapse }) => `\n    list-style: none;\n    margin: 0;\n    padding: 0 0 0 45px;\n    display: ${collapse === 'true' ? 'none' : 'block'}\n`\n);\n\nconst CheckBoxTreeListItem = styled.li`\n\tmargin: 10px 0;\n\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n`;\n\n/**\n * Multiple Checkbox component \n * @param {Object} props \n * @returns \n */\nconst CheckBoxGroupComponent = memo(({ node, onSelectItem, handleActions, removeItem, children, index }) => {\n\tconst [ collapse, setCollapse ] = useState(false);\n\t// Child item selected indicator in the group parent checkbox\n\tconst selectedItemCount = node.children && node.children.filter(n => n.isChecked === true).length;\n\t// Check the all select value dynamically when click the children checkbox\n\tconst allSelected = node.children && node.children.every(n => n.isChecked === true);\n\n\treturn (\n\t\t<CheckBoxGroupContainer>\n\t\t\t<CheckBoxGroupParent>\n\t\t\t\t<ArrowIcon onClick={() => setCollapse(!collapse)} collapse={collapse.toString()} />\n\t\t\t\t<CheckBox\n\t\t\t\t\tdragger={children}\n\t\t\t\t\tlabel={node.label}\n\t\t\t\t\tvalue={node.id}\n\t\t\t\t\tisChecked={allSelected && node.children.length > 0}\n\t\t\t\t\tonChange={e => onSelectItem({ parentIndex: index }, e.target.checked)}\n\t\t\t\t\tgroupIndicator={selectedItemCount > 0 && selectedItemCount !== node.children.length}\n\t\t\t\t\tonEdit={value => handleActions({ parentIndex: index }, value)}\n\t\t\t\t\tonRemove={() => removeItem({ parentIndex: index })}\n\t\t\t\t/>\n\t\t\t</CheckBoxGroupParent>\n\t\t\t{node.children &&\n\t\t\tnode.children.length > 0 && (\n\t\t\t\t<CheckBoxTreeList collapse={collapse.toString()}>\n\t\t\t\t\t{node.children.map((child, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CheckBoxTreeListItem key={i.toString()}>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tvalue={child.id}\n\t\t\t\t\t\t\t\t\tlabel={child.label}\n\t\t\t\t\t\t\t\t\tisChecked={child.isChecked}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tonSelectItem({ parentIndex: index, childIndex: i }, e.target.checked)}\n\t\t\t\t\t\t\t\t\tonEdit={value => handleActions({ parentIndex: index, childIndex: i }, value)}\n\t\t\t\t\t\t\t\t\tonRemove={() => removeItem({ parentIndex: index, childIndex: i })}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CheckBoxTreeListItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</CheckBoxTreeList>\n\t\t\t)}\n\t\t</CheckBoxGroupContainer>\n\t);\n});\n\nCheckBoxGroupComponent.propTypes = propTypes;\n\nexport default CheckBoxGroupComponent;\n","import React, { memo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { CheckBoxGroup, CheckBoxWithDragger } from '../../components';\nimport { SortableContainer, SortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { GrApps } from 'react-icons/gr';\n\nconst propTypes = {\n\t// flat array of object\n\ttreeJson: PropTypes.Array\n};\n\nconst DraggerIndicator = styled(GrApps)`\n    margin: 0 10px;\n\twidth: 18px;\n\tcursor: move\n`;\n\nconst SearchContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: #f3f3f3;\n\tpadding: 12px 24px;\n\tborder: 1px solid #ddd;\n\tborder-right: none;\n`;\n\nconst ColumnList = styled.div`\n\tbackground-color: #f3f3f3;\n\tpadding: 16px 24px;\n\tmax-height: 320px;\n\toverflow: auto;\n\tborder: 1px solid #ddd;\n\tborder-top: none;\n\tborder-right: none;\n`;\n\nconst ArrowIcon = styled(IoIosArrowDown)(\n\t({ collapse }) => `\n    margin-right: 12px;\n    width: 24px;\n    height: 24px;\n    cursor: pointer;\n    position: relative;\n\ttransform: rotate(${collapse === 'true' ? '0' : '-90'}deg);\n\ttop: -1px;\n`\n);\n\nconst SearchBox = styled.input`\n\tmargin-left: 10px;\n\twidth: 100%;\n\tborder: 1px solid #cac1c1;\n\tpadding: 6px;\n\tborder-radius: 4px;\n\toutline: 0;\n`;\n/**\n * Convert flat array to tree list arrat\n * @param {Array} treeArray \n * @returns {Array}\n */\nconst listToTree = (treeArray = []) => {\n\tlet map = {},\n\t\tnode,\n\t\tres = [],\n\t\ti,\n\t\tarr = [ ...treeArray ];\n\n\tarr.forEach((a, index) => {\n\t\tmap[a.id] = index;\n\t\ta.children = [];\n\t});\n\tfor (i = 0; i < arr.length; i += 1) {\n\t\tnode = arr[i];\n\t\tif (node.parentId !== '0') {\n\t\t\tarr[map[node.parentId]].children.push(node);\n\t\t} else {\n\t\t\tres.push(node);\n\t\t}\n\t}\n\treturn res;\n};\n/**\n * On search filter the tree array list\n * @param {Array} array \n * @param {String} label \n * @returns {Array}\n */\nfunction filter(array, label = '') {\n\tif (label.trim().length <= 0) {\n\t\treturn array;\n\t}\n\treturn array.reduce((r, { children = [], ...o }) => {\n\t\tif (o.label.toLowerCase().indexOf(label.toLowerCase()) !== -1) {\n\t\t\tr.push(o);\n\t\t\treturn r;\n\t\t}\n\t\t// recursive method to check the children label\n\t\tchildren = filter(children, label);\n\t\tif (children.length) {\n\t\t\tr.push(Object.assign(o, { children }));\n\t\t}\n\t\treturn r;\n\t}, []);\n}\n/**\n * Column customize component\n * @param {Array} treeJson \n */\nconst ColumnCustomizeContainer = memo(({ treeJson }) => {\n\tconst [ term, searchTem ] = useState('');\n\tconst [ treeList, setTreeList ] = useState([]);\n\tconst [ isOpen, setIsOpen ] = useState(true);\n\t// To show indicator on all select checkbox if any one of the child element is selected\n\tconst selectedItemCount = treeJson.filter(n => n.isChecked === true).length;\n\t// To Show all select/unselect checkbox based on child element selection\n\tconst isAllSelected = treeList.every(n => n.isChecked === true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst lists = listToTree(treeJson);\n\t\t\tsetTreeList(lists);\n\t\t},\n\t\t[ treeJson ]\n\t);\n\t/**\n\t * On select all checkbox will check/uncheck all element\n\t * @param {HTMLCollection} event \n\t */\n\n\tconst selectAllItems = event => {\n\t\tconst clonedList = [ ...treeList ];\n\n\t\tclonedList.forEach((tree, index) => {\n\t\t\tclonedList[index].isChecked = event.target.checked;\n\t\t\t//if have children element will add check/uncheck value\n\t\t\tif (tree.children && tree.children.length > 0) {\n\t\t\t\tclonedList[index].children.map(child => (child.isChecked = event.target.checked));\n\t\t\t}\n\t\t});\n\n\t\tsetTreeList(clonedList);\n\t};\n\t/**\n\t * On edit this function will update the new value \n\t * @param {Object} params \n\t * @param {String} value \n\t */\n\tconst handleActions = (params, value) => {\n\t\tconst clonedTree = [ ...treeList ];\n\t\tconst parentObject = clonedTree[params.parentIndex];\n\n\t\tif (params.hasOwnProperty('childIndex')) {\n\t\t\tparentObject.children[params.childIndex].label = value;\n\t\t} else {\n\t\t\tparentObject.label = value;\n\t\t}\n\n\t\tsetTreeList(clonedTree);\n\t};\n\t/**\n\t * On each checkbox selection click will select/unselect the item\n\t * @param {Object} params \n\t * @param {Boolean} checked \n\t */\n\tconst onSelectItem = (params, checked) => {\n\t\tconst clonedTree = [ ...treeList ];\n\t\tconst parentObject = clonedTree[params.parentIndex];\n\n\t\tif (params.hasOwnProperty('childIndex')) {\n\t\t\tparentObject.children[params.childIndex].isChecked = checked;\n\n\t\t\tconst selectedAllField = parentObject.children.every(child => child.isChecked === true);\n\t\t\tif (selectedAllField) {\n\t\t\t\tparentObject.isChecked = true;\n\t\t\t} else {\n\t\t\t\tparentObject.isChecked = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparentObject.isChecked = checked;\n\t\t\tparentObject.children.map(child => (child.isChecked = checked));\n\t\t}\n\n\t\tsetTreeList(clonedTree);\n\t};\n\t/**\n\t * Remove from the origin json element\n\t * @param {Array} ids \n\t */\n\tconst removeFromOriginalJson = ids => {\n\t\tids.forEach(id => {\n\t\t\tconst elementIndex = treeJson.findIndex(tree => tree.id === id);\n\t\t\ttreeJson.splice(elementIndex, 1);\n\t\t});\n\t};\n\n\t/**\n\t * On click remove option on each item it will trigger and remove the item\n\t * @param {Object} params \n\t */\n\tconst removeItem = params => {\n\t\tconst clonedTree = [ ...treeList ];\n\t\tconst parentObject = clonedTree[params.parentIndex];\n\n\t\tif (params.hasOwnProperty('childIndex')) {\n\t\t\tremoveFromOriginalJson([ parentObject.children[params.childIndex].id ]);\n\t\t\tparentObject.children.splice(params.childIndex, 1);\n\t\t} else {\n\t\t\tremoveFromOriginalJson([\n\t\t\t\tclonedTree[params.parentIndex].id,\n\t\t\t\t...clonedTree[params.parentIndex].children.map(ch => ch.id)\n\t\t\t]);\n\t\t\tclonedTree.splice(params.parentIndex, 1);\n\t\t}\n\n\t\tsetTreeList(clonedTree);\n\t};\n\n\tconst SortableItem = SortableElement(({ t, parentIndex }) => {\n\t\treturn (\n\t\t\t<CheckBoxGroup\n\t\t\t\tindex={parentIndex}\n\t\t\t\tnode={t}\n\t\t\t\tonSelectItem={onSelectItem}\n\t\t\t\thandleActions={handleActions}\n\t\t\t\tremoveItem={removeItem}\n\t\t\t>\n\t\t\t\t<DragHandle className=\"dragger\" />\n\t\t\t</CheckBoxGroup>\n\t\t);\n\t});\n\n\tconst SortableList = SortableContainer(({ children }) => {\n\t\treturn <ColumnList data-testid=\"column-group-list\">{children}</ColumnList>;\n\t});\n\n\tconst DragHandle = sortableHandle(() => <DraggerIndicator />);\n\n\tconst onSortEnd = ({ oldIndex, newIndex }) => {\n\t\t// update once dragged the old to new position of the element\n\t\tsetTreeList(arrayMove(treeList, oldIndex, newIndex));\n\t};\n\n\treturn (\n\t\t<div data-testid=\"column-customize\">\n\t\t\t<SearchContainer>\n\t\t\t\t<ArrowIcon\n\t\t\t\t\tonClick={() => setIsOpen(!isOpen)}\n\t\t\t\t\tcollapse={isOpen.toString()}\n\t\t\t\t\tdata-testid=\"group-arrow-icon\"\n\t\t\t\t/>\n\t\t\t\t<CheckBoxWithDragger\n\t\t\t\t\tisChecked={isAllSelected && treeList.length > 0}\n\t\t\t\t\tgroupIndicator={selectedItemCount > 0 && selectedItemCount !== treeJson.length}\n\t\t\t\t\tonChange={selectAllItems}\n\t\t\t\t/>\n\t\t\t\t<SearchBox\n\t\t\t\t\tvalue={term}\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tonChange={(e, a) => {\n\t\t\t\t\t\tsearchTem(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</SearchContainer>\n\t\t\t{isOpen && (\n\t\t\t\t<SortableList onSortEnd={onSortEnd} distance={1} useDragHandle>\n\t\t\t\t\t{filter(treeList, term).map((t, index) => (\n\t\t\t\t\t\t<SortableItem key={`item-${t.id}`} parentIndex={index} index={index} t={t} />\n\t\t\t\t\t))}\n\t\t\t\t</SortableList>\n\t\t\t)}\n\t\t</div>\n\t);\n});\n\nColumnCustomizeContainer.propTypes = propTypes;\n\nexport default ColumnCustomizeContainer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './theme/globalStyles';\nimport { ColumnCustomize } from './container-components/';\nimport { BsColumnsGap } from 'react-icons/bs';\n\nconst SideBar = styled.aside`\n\tposition: fixed;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\tleft: auto;\n\twidth: 60px;\n\tborder-left: 1px solid #ddd;\n`;\n\nconst Menu = styled.ul`\n\t/* This is for testing purpose only*/\n\tmargin-top: 120px;\n\n\tlist-style: none;\n\ttext-align: center;\n\tpadding: 0;\n`;\n\nconst MenuList = styled.li`position: relative;`;\n\nconst MenuListItem = styled.a(\n\t({ active }) => `\n  display: block;\n  cursor: pointer;\n  padding: 18px 0;\n  background-color: ${active ? '#F5F5F5' : 'transparent'};\n  border-top: 1px solid ${active ? '#ddd' : 'transparent'};\n  border-bottom: 1px solid ${active ? '#ddd' : 'transparent'};\n  &:hover {\n    background-color: #F5F5F5;\n  }\n`\n);\n\nconst Content = styled.div(\n\t({ show }) => `\n  position: absolute;\n  top: 0;\n  right: 60px;\n  left: auto;\n  width: 280px;\n  border-radius: 4px 0 0 4px;\n`\n);\n\nconst ResetButton = styled.button`\n\tmargin: 10px;\n\tpadding: 10px;\n\tborder: 1px solid #ddd;\n\tborder-radius: 4px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tletter-spacing: 0.4px;\n\tcursor: pointer;\n`;\n\nconst mockJson = [\n\t{\n\t\tid: '1',\n\t\tparentId: '0',\n\t\tlabel: 'Participant'\n\t},\n\t{\n\t\tid: '2',\n\t\tparentId: '1',\n\t\tlabel: 'Name'\n\t},\n\t{\n\t\tid: '3',\n\t\tparentId: '1',\n\t\tlabel: 'Language'\n\t},\n\t{\n\t\tid: '4',\n\t\tparentId: '1',\n\t\tlabel: 'Country'\n\t},\n\t{\n\t\tid: '5',\n\t\tparentId: '0',\n\t\tlabel: 'Game of choice'\n\t},\n\t{\n\t\tid: '6',\n\t\tparentId: '5',\n\t\tlabel: 'Game name'\n\t},\n\t{\n\t\tid: '7',\n\t\tparentId: '5',\n\t\tlabel: 'Bought'\n\t},\n\t{\n\t\tid: '8',\n\t\tparentId: '0',\n\t\tlabel: 'Performance'\n\t},\n\t{\n\t\tid: '9',\n\t\tparentId: '8',\n\t\tlabel: 'Bank balance'\n\t},\n\t{\n\t\tid: '10',\n\t\tparentId: '8',\n\t\tlabel: 'Extra info'\n\t}\n];\n\nfunction checkLocalStorage() {\n\tif (localStorage.getItem('ops_columns') === null) {\n\t\tlocalStorage.setItem('ops_columns', JSON.stringify(mockJson));\n\t}\n}\n\nfunction resetStorage() {\n\tlocalStorage.setItem('ops_columns', JSON.stringify(mockJson));\n\twindow.location.reload();\n}\n\nfunction App() {\n\tcheckLocalStorage();\n\tconst [ showNestedMenu, setNestedMenu ] = useState(false);\n\tconst [ mockJson ] = useState(JSON.parse(localStorage.getItem('ops_columns')));\n\tconst wrapperRef = useRef(null);\n\n\tconst onToggle = () => {\n\t\tlocalStorage.setItem('ops_columns', JSON.stringify(mockJson, null, 2));\n\t\tsetNestedMenu(!showNestedMenu);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tfunction handleClickOutside(event) {\n\t\t\t\tif (wrapperRef.current && !wrapperRef.current.contains(event.target) && showNestedMenu === true) {\n\t\t\t\t\tlocalStorage.setItem('ops_columns', JSON.stringify(mockJson, null, 2));\n\t\t\t\t\tsetNestedMenu(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Bind the event listener\n\t\t\tdocument.addEventListener('mousedown', handleClickOutside);\n\t\t\treturn () => {\n\t\t\t\t// Unbind the event listener on clean up\n\t\t\t\tdocument.removeEventListener('mousedown', handleClickOutside);\n\t\t\t};\n\t\t},\n\t\t[ wrapperRef, setNestedMenu, showNestedMenu, mockJson ]\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GlobalStyle />\n\t\t\t<ResetButton onClick={resetStorage}>Reset storage</ResetButton>\n\t\t\t<SideBar>\n\t\t\t\t<Menu>\n\t\t\t\t\t<MenuList ref={wrapperRef}>\n\t\t\t\t\t\t{/* Left side nav menu icon  */}\n\t\t\t\t\t\t<MenuListItem onClick={() => onToggle()} active={showNestedMenu}>\n\t\t\t\t\t\t\t<BsColumnsGap />\n\t\t\t\t\t\t</MenuListItem>\n\t\t\t\t\t\t{showNestedMenu && (\n\t\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t\t<ColumnCustomize treeJson={mockJson} />\n\t\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MenuList>\n\t\t\t\t</Menu>\n\t\t\t</SideBar>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}